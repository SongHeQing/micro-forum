# ./nginx/conf.d/default.conf

server {
    listen 80; # Nginx 容器监听宿主机的 80 端口，对外提供 HTTP 访问

    # 这里使用你的实际公网域名。
    # 确保你的域名 songheping.top 和 www.songheping.top 都已正确解析到服务器
    server_name songheping.top www.songheping.top; # <--- 修改为你的实际域名

    # 前端静态文件服务配置
    # 这个 location 会处理所有未被后续 /api/ 和 /uploads/ 匹配到的请求
    location / {
        root /usr/share/nginx/html; # 对应 docker-compose.yml 中 ./nginx/html 卷映射的容器内部路径
        index index.html index.htm; # 默认索引文件
        # 对于单页应用（SPA，如 Vue, React, Angular），这个 try_files 非常重要，
        # 它确保浏览器刷新页面或直接访问深层路由时，Nginx 能返回 index.html
        try_files $uri $uri/ /index.html;
    }

    # 后端 API 反向代理配置
    # 所有以 /api/ 开头的请求都会被转发到你的 Spring Boot 后端服务
    location /api/ {
        # 去掉 /api 前缀，直接转发到后端
        # 例如：/api/user/register -> /user/register
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://micro-forum-server:8080;

        # 传递客户端的真实 IP、主机名等信息给后端服务
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 可选：如果你的后端应用涉及大文件上传，可能需要调整此参数
        # client_max_body_size 100M; # 例如，允许最大 100MB 的请求体大小
    }

    # 文件上传目录反向代理配置
    # 所有以 /uploads/ 开头的请求都会被 Nginx 直接从对应的持久化卷提供服务
    location /uploads/ {
        # alias 用于替换 location 匹配到的路径。
        # /usr/share/nginx/html/uploads/ 是 micro_forum_uploads 卷在 Nginx 容器内部的挂载路径
        alias /usr/share/nginx/html/uploads/; 

        # 可选：设置静态文件的缓存策略，提高加载速度
        expires 30d; # 缓存 30 天
        add_header Cache-Control "public, must-revalidate";
        # 如果你的前端和图片服务不在同一个域，这个头信息有助于解决跨域加载问题
        add_header Cross-Origin-Resource-Policy "cross-origin"; 
    }

    # 错误页面配置（可选）：当 Nginx 遇到 5xx 错误时，返回自定义的页面
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # 错误页面通常放在静态文件根目录
    }
}